<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NewsAggregator.WebAPI</name>
    </assembly>
    <members>
        <member name="T:NewsAggregator.WebAPI.Controllers.ArticlesController">
            <summary>
            Controller for work with articles.
            </summary>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.ArticlesController.#ctor(AutoMapper.IMapper,Microsoft.Extensions.Configuration.IConfiguration,NewsAggregator.Core.Abstractions.IArticleService,NewsAggregator.Core.Abstractions.ISourceService,NewsAggregator.Core.Abstractions.IRssService)">
            <summary>
            Initializes a new instance of the <see cref="T:NewsAggregator.WebAPI.Controllers.ArticlesController"/> class.
            </summary>
            <param name="mapper"></param>
            <param name="configuration"></param>
            <param name="articleService"></param>
            <param name="sourceService"></param>
            <param name="rssService"></param>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.ArticlesController.GetArticleById(System.Guid)">
            <summary>
            Get article from the storage by id.
            </summary>
            <param name="id">An article unique identifier as a <see cref="T:System.Guid"/>.</param>
            <returns></returns>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.ArticlesController.GetArticles(NewsAggregator.WebAPI.Models.Requests.GetArticlesRequestModel)">
            <summary>
            Get all articles or get articles by rate or source id.
            </summary>
            <param name="articleModel">Assign articles a minimum rating to display or specify source id.</param>
            <returns></returns>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.ArticlesController.CreateCustomArticle(System.Guid,NewsAggregator.WebAPI.Models.Requests.AddOrUpdateArticleRequestModel)">
            <summary>
            Create a new custom article and add it to the storage.
            </summary>
            <param name="id">Assign a unique article identifier as a <see cref="T:System.Guid"/></param>
            <param name="articleModel">Assign article name, category, short description and article text.</param>
            <returns></returns>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.ArticlesController.UpdateArticle(System.Guid,NewsAggregator.WebAPI.Models.Requests.AddOrUpdateArticleRequestModel)">
            <summary>
            Update all fields in article with specified id.
            </summary>
            <param name="id">Assign a unique article identifier as a <see cref="T:System.Guid"/>.</param>
            <param name="articleModel">Contains article name, category, short description and article text.</param>
            <returns></returns>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.ArticlesController.UpdateArticle(System.Guid,NewsAggregator.WebAPI.Models.Requests.PatchRequestModel)">
            <summary>
            Update only necessary field in article with specified id.
            </summary>
            <param name="id">Assign a unique article identifier as a <see cref="T:System.Guid"/>.</param>
            <param name="articleModel">Contains article name substring and source id.</param>
            <returns></returns>
        </member>
        <member name="T:NewsAggregator.WebAPI.Controllers.DownloadArticlesController">
            <summary>
            Controller for getting articles from available sources.
            </summary>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.DownloadArticlesController.#ctor(NewsAggregator.Core.Abstractions.IArticleService,NewsAggregator.Core.Abstractions.IRssService)">
            <summary>
            Initializes a new instance of the <see cref="T:NewsAggregator.WebAPI.Controllers.DownloadArticlesController"/> class.
            </summary>
            <param name="articleService"></param>
            <param name="rssService"></param>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.DownloadArticlesController.AddArticlesFromAllAvailableSourcesToTheStorage">
            <summary>
            Create recurring jobs to add articles from all available sources to the storage.
            </summary>
            <returns></returns>
        </member>
        <member name="T:NewsAggregator.WebAPI.Controllers.SourcesController">
            <summary>
            Controller for work with sources.
            </summary>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.SourcesController.#ctor(AutoMapper.IMapper,NewsAggregator.Core.Abstractions.ISourceService)">
            <summary>
            Initializes a new instance of the <see cref="T:NewsAggregator.WebAPI.Controllers.SourcesController"/> class.
            </summary>
            <param name="mapper"></param>
            <param name="sourceService"></param>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.SourcesController.GetSourceById(System.Guid)">
            <summary>
            Get source from the storage by source id.
            </summary>
            <param name="id">A source unique identifier as a <see cref="T:System.Guid"/></param>
            <returns></returns>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.SourcesController.GetSources(NewsAggregator.WebAPI.Models.Requests.GetSourceRequestModel)">
            <summary>
            Get all sources or get source by name.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.SourcesController.DeleteSource(System.Guid)">
            <summary>
            Delete source from storage by id.
            </summary>
            <param name="id">Contains source id.</param>
            <returns></returns>
        </member>
        <member name="T:NewsAggregator.WebAPI.Controllers.TokenController">
            <summary>
            
            </summary>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.TokenController.#ctor(NewsAggregator.Core.Abstractions.IUserService,NewsAggregator.WebAPI.Utils.IJwtUtil)">
            <summary>
            
            </summary>
            <param name="userService"></param>
            <param name="jwtUtil"></param>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.TokenController.CreateJwtToken(NewsAggregator.WebAPI.Models.Requests.LoginUserRequestModel)">
            <summary>
            Login and create JWT token.
            </summary>
            <param name="requestModel">Contains user email and user password.</param>
            <returns></returns>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.TokenController.RefreshToken(NewsAggregator.WebAPI.Models.Requests.RefreshTokenRequestModel)">
            <summary>
            Register user.
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.TokenController.RevokeToken(NewsAggregator.WebAPI.Models.Requests.RefreshTokenRequestModel)">
            <summary>
            Method for revoke refresh token.
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="T:NewsAggregator.WebAPI.Controllers.UserController">
            <summary>
            Controller for work with users.
            </summary>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.UserController.#ctor(AutoMapper.IMapper,Microsoft.Extensions.Configuration.IConfiguration,NewsAggregator.Core.Abstractions.IUserService,NewsAggregator.Core.Abstractions.IRoleService,NewsAggregator.WebAPI.Utils.IJwtUtil)">
            <summary>
            Initializes a new instance of the <see cref="T:NewsAggregator.WebAPI.Controllers.UserController"/> class.
            </summary>
            <param name="mapper"></param>
            <param name="configuration"></param>
            <param name="userService"></param>
            <param name="roleService"></param>
            <param name="jwtUtil"></param>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.UserController.Get">
            <summary>
            Get all register users.
            </summary>
            <returns></returns>
        </member>
        <member name="M:NewsAggregator.WebAPI.Controllers.UserController.Create(NewsAggregator.WebAPI.Models.Requests.RegisterUserRequestModel)">
            <summary>
            Register new user.
            </summary>
            <param name="userModel">Contains user email, password and password confirmation.</param>
            <returns></returns>
        </member>
        <member name="T:NewsAggregator.WebAPI.Models.Requests.AddOrUpdateArticleRequestModel">
            <summary>
            Request model for adding or updating an article.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Requests.AddOrUpdateArticleRequestModel.Title">
            <summary>
            Article title.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Requests.AddOrUpdateArticleRequestModel.Category">
            <summary>
            Article category.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Requests.AddOrUpdateArticleRequestModel.ShortDescription">
            <summary>
            Article sthort descrtiption.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Requests.AddOrUpdateArticleRequestModel.ArticleText">
            <summary>
            Article text.
            </summary>
        </member>
        <member name="T:NewsAggregator.WebAPI.Models.Requests.GetArticlesRequestModel">
            <summary>
            Request model for getting an article.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Requests.GetArticlesRequestModel.SourceId">
            <summary>
            Source id.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Requests.GetArticlesRequestModel.Rate">
            <summary>
            Available rating for showing articles.
            </summary>
        </member>
        <member name="T:NewsAggregator.WebAPI.Models.Requests.GetSourceRequestModel">
            <summary>
            Request model for getting a source.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Requests.GetSourceRequestModel.Name">
            <summary>
            Source name.
            </summary>
        </member>
        <member name="T:NewsAggregator.WebAPI.Models.Requests.LoginUserRequestModel">
            <summary>
            Request model for user login.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Requests.LoginUserRequestModel.Email">
            <summary>
            User email.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Requests.LoginUserRequestModel.Password">
            <summary>
            User password.
            </summary>
        </member>
        <member name="T:NewsAggregator.WebAPI.Models.Requests.PatchFieldModel">
            <summary>
            
            </summary>
        </member>
        <member name="T:NewsAggregator.WebAPI.Models.Requests.PatchRequestModel">
            <summary>
            
            </summary>
        </member>
        <member name="T:NewsAggregator.WebAPI.Models.Requests.RegisterUserRequestModel">
            <summary>
            Request model for user registration.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Requests.RegisterUserRequestModel.Email">
            <summary>
            User email.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Requests.RegisterUserRequestModel.Password">
            <summary>
            User password.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Requests.RegisterUserRequestModel.PasswordConfirmation">
            <summary>
            User password confirmation.
            </summary>
        </member>
        <member name="T:NewsAggregator.WebAPI.Models.Responses.ArticleResponseModel">
            <summary>
            Response model for displaying article data.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.ArticleResponseModel.Title">
            <summary>
            Article title.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.ArticleResponseModel.Category">
            <summary>
            Article category.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.ArticleResponseModel.ShortDescription">
            <summary>
            Article short description.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.ArticleResponseModel.ArticleText">
            <summary>
            Article text.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.ArticleResponseModel.PublicationDate">
            <summary>
            Article publication date.
            </summary>
        </member>
        <member name="T:NewsAggregator.WebAPI.Models.Responses.ErrorModel">
            <summary>
            Model for returning errors from api.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.ErrorModel.ErrorMessage">
            <summary>
            Error message.
            </summary>
        </member>
        <member name="T:NewsAggregator.WebAPI.Models.Responses.SourceResponseModel">
            <summary>
            Response model for displaying source data.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.SourceResponseModel.Name">
            <summary>
            Source name.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.SourceResponseModel.Url">
            <summary>
            Source url.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.SourceResponseModel.Id">
            <summary>
            Source id.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.SourceResponseModel.RssUrl">
            <summary>
            Source Rss Url
            </summary>
        </member>
        <member name="T:NewsAggregator.WebAPI.Models.Responses.SuccessModel">
            <summary>
            Model for returning success messages from api.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.SuccessModel.DetailMessage">
            <summary>
            Success detail message.
            </summary>
        </member>
        <member name="T:NewsAggregator.WebAPI.Models.Responses.TokenResponse">
            <summary>
            Response model for returning token data.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.TokenResponse.AccessToken">
            <summary>
            Access token.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.TokenResponse.Role">
            <summary>
            Role.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.TokenResponse.UserId">
            <summary>
            User id.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.TokenResponse.TokenExpiration">
            <summary>
            Token expiration.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.TokenResponse.RefreshToken">
            <summary>
            Refresh token.
            </summary>
        </member>
        <member name="T:NewsAggregator.WebAPI.Models.Responses.UserResponseModel">
            <summary>
            Response model for displaying user data.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.UserResponseModel.Email">
            <summary>
            User email.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.UserResponseModel.RoleName">
            <summary>
            User role name.
            </summary>
        </member>
        <member name="P:NewsAggregator.WebAPI.Models.Responses.UserResponseModel.RoleId">
            <summary>
            User role id.
            </summary>
        </member>
        <member name="T:NewsAggregator.WebAPI.Utils.IJwtUtil">
            <summary>
            Utility interface for working with JWT token.
            </summary>
        </member>
        <member name="M:NewsAggregator.WebAPI.Utils.IJwtUtil.GenerateTokenAsync(NewsAggregator.Core.DataTransferObjects.UserDto)">
            <summary>
            Method for generating JWT token.
            </summary>
            <param name="userDto"></param>
            <returns></returns>
        </member>
        <member name="M:NewsAggregator.WebAPI.Utils.IJwtUtil.RemoveRefreshTokenAsync(System.Guid)">
            <summary>
            Method for removing refresh token.
            </summary>
            <param name="requestRefreshToken"></param>
            <returns></returns>
        </member>
        <member name="T:NewsAggregator.WebAPI.Utils.JwtUtilSha256">
            <summary>
            Utility for working with JWT token.
            </summary>
        </member>
        <member name="M:NewsAggregator.WebAPI.Utils.JwtUtilSha256.#ctor(Microsoft.Extensions.Configuration.IConfiguration,MediatR.IMediator)">
            <summary>
            Initializes a new instance of the <see cref="T:NewsAggregator.WebAPI.Utils.JwtUtilSha256"/> class.
            </summary>
            <param name="configuration">Configuration file.</param>
            <param name="mediator"></param>
        </member>
        <member name="M:NewsAggregator.WebAPI.Utils.JwtUtilSha256.GenerateTokenAsync(NewsAggregator.Core.DataTransferObjects.UserDto)">
            <summary>
            Method for generating JWT token.
            </summary>
            <param name="userDto">Contains user id, email, password hash, role id and role name.</param>
            <returns></returns>
        </member>
        <member name="M:NewsAggregator.WebAPI.Utils.JwtUtilSha256.RemoveRefreshTokenAsync(System.Guid)">
            <summary>
            Method for removing refresh token.
            </summary>
            <param name="requestRefreshToken">Contains refresh token for removing.</param>
            <returns></returns>
        </member>
    </members>
</doc>
